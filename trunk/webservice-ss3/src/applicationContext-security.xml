<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
                        
    <debug/> 
	
	<!-- 配置用户访问的权限 -->
	<!-- 不要过滤图片等静态资源，其中**代表可以跨越目录，*不可以跨越目录。 -->
	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.png" security="none" />
	<http pattern="/**/*.gif" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.js" security="none" />
	<http pattern="/login.jsp" security="none" />
	<http auto-config="true" access-denied-page="/accessDenied.jsp">
		<!-- 
		<intercept-url pattern="/*.jsp" access="ROLE_ADMIN,ROLE_USER"/>
		<intercept-url pattern="/register*/**" access="ROLE_ADMIN"/>
		<intercept-url pattern="/admin/main/**" access="ROLE_ADMIN"/> -->
		<remember-me use-secure-cookie="true"/>
		<logout delete-cookies="true" logout-url="/j_spring_security_logout" logout-success-url="/userlogin/gotoLogin.do"/>
		<intercept-url pattern="/userlogin/gotoLogin.do" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<form-login login-page="/userlogin/gotoLogin.do" default-target-url="/admin/main/gotoMainMenu.do" authentication-failure-url="/userlogin/gotoLogin.do?error=true"/>
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
		
		<session-management>
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
		</session-management>
	</http>
	
	<!-- 一个自定义的filter，必须包含authenticationManager,
  		accessDecisionManager,securityMetadataSource三个属性。  -->
  	 <!-- 配置过滤器 -->
	<beans:bean id="myFilter" 
	  class="com.way.blog.ss3.security.MyFilterSecurityInterceptor">
	   <!--用户拥有的权限   -->
	  <beans:property name="authenticationManager" ref="authenticationManager"/>
	 <!--用户是否拥有请求资源的权限   -->  
	  <beans:property name="accessDecisionManager" ref="myAccessDecisionManager"/>
	  <!-- 资源与权限对应关系  --> 
	  <beans:property name="securityMetadataSource" ref="securityMetadataSource"/>
	   
	 </beans:bean>
	 
	 <beans:bean id="myAccessDecisionManager" class="com.way.blog.ss3.security.MyAccessDecisionManager"/>
	 <beans:bean id="securityMetadataSource" class="com.way.blog.ss3.security.MyInvocationSecutityMetadataSourceService"/>
	 <beans:bean id="securityManagerSupport" class="com.way.blog.ss3.security.MyUserdetialService"/>
	
	
	<!-- 根据登录用户获取用户的权限 -->
	<authentication-manager alias="authenticationManager">
		
		<authentication-provider user-service-ref="securityManagerSupport">
			<password-encoder hash="md5">
				<salt-source user-property="username"/>
			</password-encoder>
			
			<!--<jdbc-user-service data-source-ref="dataSource" 
			users-by-username-query="select u.username,u.password, u.enabled as 'enable' from users u where u.username=?"
			authorities-by-username-query="select u.username, a.authority as 'authority' from users u join authorities a on a.username = u.username where u.username=?"/>
			-->
			<!-- 
			<user-service>
				<user name="fenzaiway" password="way890727" authorities="ROLE_USER"/>
				<user name="sa" password="sa" authorities="ROLE_USER,ROLE_ADMIN"/>
			</user-service> -->
			
		</authentication-provider>
	</authentication-manager>
	
	
</beans:beans>
